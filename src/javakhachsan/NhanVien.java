/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javakhachsan;

import ConnectDB.ConnectDB;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ImageIcon;   
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author trang.nguyen
 */
public class NhanVien extends javax.swing.JFrame {

    DefaultTableModel model;
    Connection conn = null;
    private ResultSet result;
    PreparedStatement preStatement;
    String fileName = null;
    byte[] personImage = null;

    /**
     * Creates new form NhanVien
     */
    /*public void showTable() {
     try {
     preStatement = conn.prepareStatement("select * from NhanVien");
     result = preStatement.executeQuery();
     while (result.next()) {
     Object[] arr = {result.getString(1),
     result.getString(2),
     result.getDate(3),
     result.getString(4),
     result.getString(5),
     result.getString(6),
     result.getString(7),
     result.getString(8)};

     model.addRow(arr);

     }
     } catch (Exception e) {
     e.printStackTrace();
     }

     }*/
    public NhanVien() {
        initComponents();
        this.setSize(800, 700);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        //model = (DefaultTableModel) tbEmployee.getModel();
        //conn = ConnectDB.getConnect();
        txtID.setText("");
        txtName.setText("");
        txtAdd.setText("");
        txtBirthday.setText("");
        txtPhoneNumber.setText("");
        cbbDepartment.setSelectedIndex(-1);
        cbbPosition.setSelectedIndex(-1);
        //showTable();
        showEmployee();
    }

    public ArrayList<Employee1> nhanVienList() {
        ArrayList<Employee1> nhanVienList = new ArrayList<>();
        try {
            conn = ConnectDB.getConnect();
            String sql = "select * from NhanVien";
            Statement st = conn.createStatement();
            result = st.executeQuery(sql);
            Employee1 nv;
            while (result.next()) {
                nv = new Employee1(result.getString("MaNhanVien"),
                        result.getString("TenNhanVien"),
                        result.getDate("NgaySinh"),
                        result.getString("GioiTinh"),
                        result.getString("MaChucVu"),
                        result.getString("PhongBan"),
                        result.getString("DiaChi"),
                        result.getString("PhoneNumber"),
                        result.getBytes("images"));
                nhanVienList.add(nv);
            }

        } catch (Exception e) {
            e.printStackTrace();

        }
        return nhanVienList;
    }

    public void showEmployee() {
        ArrayList <Employee1> list = nhanVienList();
        model = (DefaultTableModel) tbEmployee.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMaNhanVien();
            row[1] = list.get(i).getTenNhanVien();
            row[2] = list.get(i).getNgaySinh();
            row[3] = list.get(i).getGioiTinh();
            row[4] = list.get(i).getMaChucVu();
            row[5] = list.get(i).getPhongBan();
            row[6] = list.get(i).getDiaChi();
            row[7] = list.get(i).getPhoneNumber();
            //row[8] = list.get(i).getImage();
            model.addRow(row);
            //ImageIcon imageIcon = new ImageIcon(list.get(i).getImage());
            //lblImage.setIcon(imageIcon);
        }
        //byte[] anh = (nhanVienList().get(i).getImage());
        //ImageIcon imageIcon = new ImageIcon(personImage.getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH));
        
        
            //ImageIcon imageIcon = new ImageIcon(new ImageIcon(anh).getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH));
            //lblImage.setIcon(imageIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbbDepartment = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        btnMale = new javax.swing.JRadioButton();
        btnFemale = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEmployee = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAdd = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        txtBirthday = new javax.swing.JTextField();
        cbbPosition = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();
        btnImage = new javax.swing.JButton();
        cbbSearch = new javax.swing.JComboBox();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jLabel2.setText("ID");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 60, 60, 20);

        jLabel3.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jLabel3.setText("Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 110, 50, 30);

        jLabel4.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jLabel4.setText("Position");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 260, 70, 20);

        jLabel5.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jLabel5.setText("Birthday");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 170, 90, 18);

        jLabel6.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jLabel6.setText("Gender");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 210, 60, 30);

        cbbDepartment.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Accounting", "Administration", "Financial ", "Reception", "Service", "Manager", " " }));
        cbbDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbDepartmentActionPerformed(evt);
            }
        });
        getContentPane().add(cbbDepartment);
        cbbDepartment.setBounds(120, 300, 120, 30);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(100, 190, 100, 0);

        buttonGroup1.add(btnMale);
        btnMale.setText("Male");
        btnMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaleActionPerformed(evt);
            }
        });
        getContentPane().add(btnMale);
        btnMale.setBounds(120, 210, 70, 23);

        buttonGroup1.add(btnFemale);
        btnFemale.setText("Female");
        btnFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFemaleActionPerformed(evt);
            }
        });
        getContentPane().add(btnFemale);
        btnFemale.setBounds(200, 210, 70, 23);

        tbEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthday", "Gender", "Postion", "Department", "Address", "PhoneNumber"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbEmployee);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 460, 760, 170);

        jLabel10.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jLabel10.setText("Phone Number");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(10, 400, 110, 30);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(100, 320, 0, 0);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/delete2.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete);
        btnDelete.setBounds(460, 320, 120, 50);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/save1.png"))); // NOI18N
        btnAdd.setText("SAVE");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd);
        btnAdd.setBounds(460, 260, 100, 50);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/update1.png"))); // NOI18N
        btnEdit.setText("UPDATE");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit);
        btnEdit.setBounds(610, 250, 130, 60);

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/exit1.png"))); // NOI18N
        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit);
        btnExit.setBounds(540, 390, 130, 50);

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtID);
        txtID.setBounds(120, 60, 260, 30);
        getContentPane().add(txtName);
        txtName.setBounds(120, 110, 260, 30);
        getContentPane().add(txtAdd);
        txtAdd.setBounds(120, 350, 260, 30);
        getContentPane().add(jLabel11);
        jLabel11.setBounds(30, 270, 0, 0);

        jLabel12.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jLabel12.setText("Department");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(10, 310, 80, 18);

        jLabel13.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jLabel13.setText("Address");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(10, 360, 70, 18);
        getContentPane().add(txtPhoneNumber);
        txtPhoneNumber.setBounds(120, 400, 260, 30);

        txtBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBirthdayActionPerformed(evt);
            }
        });
        getContentPane().add(txtBirthday);
        txtBirthday.setBounds(120, 160, 260, 30);

        cbbPosition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CT", "GD", "PGD", "TP", "NV" }));
        cbbPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbPositionActionPerformed(evt);
            }
        });
        getContentPane().add(cbbPosition);
        cbbPosition.setBounds(120, 250, 60, 30);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/reset.png"))); // NOI18N
        jButton1.setText("RESET");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(610, 320, 130, 50);

        lblImage.setBackground(new java.awt.Color(255, 51, 51));
        getContentPane().add(lblImage);
        lblImage.setBounds(530, 10, 130, 110);

        btnImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/camera.png"))); // NOI18N
        btnImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageActionPerformed(evt);
            }
        });
        getContentPane().add(btnImage);
        btnImage.setBounds(510, 110, 130, 40);

        cbbSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CT", "GD", "PGD", "TP", "NV" }));
        cbbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSearchActionPerformed(evt);
            }
        });
        cbbSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbbSearchKeyReleased(evt);
            }
        });
        getContentPane().add(cbbSearch);
        cbbSearch.setBounds(510, 170, 80, 30);

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch);
        txtSearch.setBounds(510, 210, 180, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/try.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -20, 770, 690);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbDepartmentActionPerformed
        // TODO add your handling code here:
        //cbbDepartment.setSelectedIndex(-1);
    }//GEN-LAST:event_cbbDepartmentActionPerformed

    private void btnMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMaleActionPerformed

    private void btnFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFemaleActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to close the application?", "Close Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }


    }//GEN-LAST:event_btnExitActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "insert into NhanVien values (?,?,?,?,?,?,?,?,?)";
            preStatement = conn.prepareStatement(sql);
            preStatement.setString(1, txtID.getText());
            preStatement.setString(2, txtName.getText());
            preStatement.setDate(3, Date.valueOf(txtBirthday.getText()));
            if (btnMale.isSelected()) {
                //preStatement.setString(4, btnMale.getText().toString());
                preStatement.setString(4, "Male");
            }
            if (btnFemale.isSelected()) {
                preStatement.setString(4, btnFemale.getText().toString());
                //preStatement.setString(4, "Female");
            }
            if (cbbPosition.getSelectedIndex() != -1) {
                preStatement.setString(5, (String) cbbPosition.getSelectedItem().toString());
            }
            if (cbbDepartment.getSelectedIndex() != -1) {
                preStatement.setString(6, (String) cbbDepartment.getSelectedItem().toString());
            }
            preStatement.setString(7, txtAdd.getText());
            preStatement.setString(8, txtPhoneNumber.getText());
            preStatement.setBytes(9, personImage);
            int x = preStatement.executeUpdate();
            if (x > 0) {
                JOptionPane.showMessageDialog(null, "You have successfully added information");
            }
            model.setRowCount(0);
            showEmployee();
            //showTable();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if (tbEmployee.getSelectedRow() == -1) {
            if (tbEmployee.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Table is empty");
            } else {
                JOptionPane.showMessageDialog(null, "You must choose location you want to update");
            }
        } else {

            int row = tbEmployee.getSelectedRow();
            Object o = tbEmployee.getValueAt(row, 0);
            try {
                preStatement = conn.prepareStatement("UPDATE NhanVien SET MaNhanVien =?,TenNhanVien =?, NgaySinh=?,GioiTinh=?,MaChucVu=?,PhongBan=?,DiaChi=?,PhoneNumber=?,images=? where MaNhanVien=?");
                preStatement.setString(1, txtID.getText());
                preStatement.setString(2, txtName.getText());
                preStatement.setDate(3, Date.valueOf(txtBirthday.getText()));
                if (btnMale.isSelected()) {
                    preStatement.setString(4, btnMale.getText().toString());
                    //preStatement.setString(4, "Male");
                }
                if (btnFemale.isSelected()) {
                    preStatement.setString(4, btnFemale.getText().toString());
                    //preStatement.setString(4, "Female");
                }
                if (cbbPosition.getSelectedIndex() != -1) {
                    preStatement.setString(5, (String) cbbPosition.getSelectedItem());
                }

                if (cbbDepartment.getSelectedIndex() != -1) {
                    preStatement.setString(6, (String) cbbDepartment.getSelectedItem().toString());
                }
                preStatement.setString(7, txtAdd.getText());
                preStatement.setString(8, txtPhoneNumber.getText());
                preStatement.setBytes(9, personImage);
                preStatement.setString(10, String.valueOf(o));
                preStatement.executeUpdate();
                //model.setRowCount(0);
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
            model.setRowCount(0);
            //showTable();
            // }
            showEmployee();
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void tbEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEmployeeMouseClicked

        int i = tbEmployee.getSelectedRow();
        model = (DefaultTableModel) tbEmployee.getModel();
        txtID.setText(String.valueOf(model.getValueAt(i, 0).toString()));
        //txtID.setText(String.valueOf(model.getValueAt(tbEmployee.getSelectedRow(), 0)));
        txtName.setText(String.valueOf(model.getValueAt(i, 1).toString()));
        txtBirthday.setText(String.valueOf(model.getValueAt(i, 2).toString()));
        String gender = model.getValueAt(i, 3).toString();
        if (gender.equals("Male")) {
            btnMale.setSelected(true);
        } else {
            btnFemale.setSelected(true);
        }
        String position = model.getValueAt(i, 4).toString();
        if (position.equals("CT")) {
            cbbPosition.setSelectedIndex(0);
        }
        if (position.equals("GD")) {
            cbbPosition.setSelectedIndex(1);
        }
        if (position.equals("PGD")) {
            cbbPosition.setSelectedIndex(2);
        }
        if (position.equals("TP")) {
            cbbPosition.setSelectedIndex(3);
        }
        if (position.equals("NV")) {
            cbbPosition.setSelectedIndex(4);
        }

        String department = model.getValueAt(i, 5).toString();

        if (department.equals("Accounting")) {
            cbbDepartment.setSelectedIndex(0);
        } else if (department.equals("Administration")) {
            cbbDepartment.setSelectedIndex(1);
        } else if (department.equals("Financial")) {
            cbbDepartment.setSelectedIndex(2);
        } else if (department.equals("Reception")) {
            cbbDepartment.setSelectedIndex(3);
        } else if (department.equals("Service")) {
            cbbDepartment.setSelectedIndex(4);
        } else if (department.equals("Security")) {
            cbbDepartment.setSelectedIndex(5);
        } else if (department.equals("Manager")) {
            cbbDepartment.setSelectedIndex(5);
        }
        txtAdd.setText(String.valueOf(model.getValueAt(i, 6).toString()));
        txtPhoneNumber.setText(String.valueOf(model.getValueAt(i, 7).toString()));
        byte[] anh = (nhanVienList().get(i).getImage());
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(anh).getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH));
        lblImage.setIcon(imageIcon);
        /*Blob blob = rs.getBlob("img");
        int blobLength = (int) blob.length();  

        byte[] bytes = blob.getBytes(1, blobLength);
        blob.free();
        BufferedImage img = ImageIO.read(new ByteArrayInputStream(bytes));*/        
    }//GEN-LAST:event_tbEmployeeMouseClicked

    private void cbbPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbPositionActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbbPositionActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (tbEmployee.getSelectedRow() == -1) {
            if (tbEmployee.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Table is empty");
            } else {
                JOptionPane.showMessageDialog(null, "You must choose location you want to delete");
            }
        } else {
            int p = JOptionPane.showConfirmDialog(null, "Do  you want to delete", "Delete", JOptionPane.YES_NO_OPTION);
            if (p == 0) {
                try {
                    int vt = tbEmployee.getSelectedRow();
                    Object o = tbEmployee.getValueAt(vt, 0);
                    preStatement = conn.prepareStatement("DELETE FROM NhanVien WHERE MaNhanVien = ?;");
                    preStatement.setString(1, String.valueOf(o));
                    preStatement.execute();
                    model.setRowCount(0);
                    showEmployee();
                    //showTable();

                } catch (SQLException ex) {

                }

            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtID.setText(null);
        txtName.setText(null);
        txtBirthday.setText(null);
        txtPhoneNumber.setText(null);
        txtAdd.setText(null);
        cbbDepartment.setSelectedIndex(-1);
        cbbPosition.setSelectedIndex(-1);
//        btnMale.setSelected(false);
//        btnFemale.setSelected(false);
        buttonGroup1.clearSelection();
        //lblImage.setEnabled(false);
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File file = chooser.getSelectedFile();
        fileName = file.getAbsolutePath();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(fileName).getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH));
        lblImage.setIcon(imageIcon);
        try {
            File image = new File(fileName);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int readNum; (readNum = fis.read(buf)) != -1;) {
                //bos.write(,0,readNum);
                bos.write(buf, 0, readNum);
            }
            personImage = bos.toByteArray();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnImageActionPerformed

    private void txtBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBirthdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBirthdayActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void cbbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSearchActionPerformed
        
    }//GEN-LAST:event_cbbSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        try {
            
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void cbbSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbbSearchKeyReleased
        // TODO add your handling code here:
        try {
            String chucvu = cbbPosition.getSelectedItem().toString();
            String sql = "select * from NhanVien where MaChucVu =?";
            preStatement = conn.prepareStatement(sql);
            preStatement.setString(5, chucvu);
            
        } catch (SQLException e) {
            
        }
            
        
    }//GEN-LAST:event_cbbSearchKeyReleased

//    public void showTable() {
//        try {
//            preStatement = conn.prepareStatement("select * from NhanVien");
//            result = preStatement.executeQuery();
//            while (result.next()) {
//                Object[] arr = {result.getString(1),
//                    result.getString(2),
//                    result.getDate(3),
//                    result.getString(4),
//                    result.getString(5),
//                    result.getString(6),
//                    result.getString(7),
//                    result.getString(8)};
//
//                model.addRow(arr);
//
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new NhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JRadioButton btnFemale;
    private javax.swing.JButton btnImage;
    private javax.swing.JRadioButton btnMale;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cbbDepartment;
    private javax.swing.JComboBox cbbPosition;
    private javax.swing.JComboBox cbbSearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTable tbEmployee;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JTextField txtBirthday;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
